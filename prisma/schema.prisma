generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                        Int      @id @default(autoincrement())
  created_at                DateTime @default(now()) @db.Timestamp(0)
  first_name                String   @db.VarChar(45)
  last_name                 String   @db.VarChar(45)
  email                     String   @db.VarChar(45)
  password                  String   @db.VarChar(255)
  profile_picture           String?  @db.VarChar(255)
  todos_todos_idTousers     todos?   @relation("todos_idTousers")
  todos_todos_userIdTousers todos[]  @relation("todos_userIdTousers")
}

model sessions {
  session_id String  @id @db.VarChar(128)
  expires    Int     @db.UnsignedInt
  data       String? @db.MediumText
}

model task_statuses {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(45)
  todos todos[]
}

model todos {
  id                        Int            @id @default(autoincrement())
  text                      String         @db.VarChar(600)
  userId                    Int?
  statusId                  Int?
  users_todos_idTousers     users          @relation("todos_idTousers", fields: [id], references: [id], onUpdate: Restrict, map: "todos_ibfk_1")
  task_statuses             task_statuses? @relation(fields: [statusId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "todos_ibfk_3")
  users_todos_userIdTousers users?         @relation("todos_userIdTousers", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "todos_ibfk_2")

  @@index([statusId], map: "statusId")
  @@index([userId], map: "userId")
}
